{"version":3,"sources":["../../server/graphql/resolvers.js"],"names":["prepare","obj","_id","toString","Date","GraphQLScalarType","name","description","parseValue","value","serialize","getTime","parseLiteral","ast","kind","Kind","INT","parseInt","Query","getAuthUser","__","___","context","User","user","find","Error","users","map","email","getUserById","findById","projectsByUserId","userId","Project","projects","project","componentsByProjectId","projectId","Component","components","component","propsByComponentId","componentId","Prop","props","prop","stateByComponentId","State","state","statefield","callbacksByComponentId","Callback","callbacks","callback","cloneId","Mutation","login","password","SECRET","findOne","bcrypt","compare","isValid","token","jwt","sign","_","pick","expiresIn","signup","args","username","some","u","Number","hash","save","savedUser","createProject","date","body","Object","assign","dateCreated","dateVisited","deleteProject","deleteOne","result","n","deleteComponent","parentId","children","filter","id","update","deleteUnassignedComponent","createComponent","iteration","returnComponent","copyComponent","copyChildren","childrenData","child","data","style","placement","copy","toggleComponentStyle","newComponent","addChild","childId","editComponentName","addProp","deleteProp","editProp","proptype","findOneAndUpdate","addState","deleteState","editState","statetype","addCallback","cb","deleteCallback","editCallback","setState","functionArgs","unassignComponent","parentComp","newChildren","newParent","newChild","assignComponent"],"mappings":"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","file":"resolvers.js","sourcesContent":["import { GraphQLScalarType } from \"graphql\";\nimport { Kind } from \"graphql/language\";\nimport bcrypt from \"bcrypt\";\nimport jwt from \"jsonwebtoken\";\nimport _ from \"lodash\";\n\nconst prepare = obj => {\n  obj._id = obj._id.toString();\n  return obj;\n};\n\nexport default {\n  Date: new GraphQLScalarType({\n    name: \"Date\",\n    description: \"Date custom scalar type\",\n    parseValue(value) {\n      return new Date(value); // value from the client\n    },\n    serialize(value) {\n      return value.getTime(); // value sent to the client\n    },\n    parseLiteral(ast) {\n      if (ast.kind === Kind.INT) {\n        return parseInt(ast.value, 10); // ast value is always in string format\n      }\n      return null;\n    }\n  }),\n  Query: {\n    getAuthUser: async (__, ___, context) => {\n      const { User } = context;\n      if (context.user) {\n        const { _id } = context.user;\n        const user = await User.find({ _id });\n        return prepare(user[0]);\n      } else {\n        return new Error(\"user not authenticated\");\n      }\n    },\n    users: async (__, ___, { User }) => {\n      const users = await User.find();\n      return users.map(user => prepare(user));\n    },\n    user: async (__, { email }, { User }) => {\n      const user = await User.find({ email });\n      return prepare(user[0]);\n    },\n    getUserById: async (__, { _id }, { User }) => {\n      const user = await User.findById(_id);\n      return prepare(user);\n    },\n    projectsByUserId: async (__, { userId }, { Project }) => {\n      const projects = await Project.find({ userId });\n      return projects.map(project => prepare(project));\n    },\n    componentsByProjectId: async (__, { projectId }, { Component }) => {\n      const components = await Component.find({ projectId });\n      return components.map(component => prepare(component));\n    },\n    propsByComponentId: async (__, { componentId }, { Prop }) => {\n      const props = await Prop.find({ componentId });\n      return props.map(prop => prepare(prop));\n    },\n    stateByComponentId: async (__, { componentId }, { State }) => {\n      const state = await State.find({ componentId });\n      return state.map(statefield => prepare(statefield));\n    },\n    callbacksByComponentId: async (__, { componentId }, { Callback }) => {\n      const callbacks = await Callback.find({ componentId });\n      return callbacks.map(callback => prepare(callback));\n    }\n  },\n  Project: {\n    components: async ({ _id }, ___, { Component }) =>\n      await Component.find({ projectId: _id })\n  },\n  Component: {\n    props: async ({ cloneId }, ___, { Prop }) =>\n      await Prop.find({ componentId: cloneId }),\n    state: async ({ cloneId }, ___, { State }) =>\n      await State.find({ componentId: cloneId }),\n    callbacks: async ({ cloneId }, ___, { Callback }) =>\n      await Callback.find({ componentId: cloneId })\n  },\n  Mutation: {\n    login: async (__, { email, password }, { User, SECRET }) => {\n      const user = await User.findOne({ email: email });\n      if (!user) { \n        throw new Error(\"No user with that email\"); \n      }\n\n      const isValid = await bcrypt.compare(password, user.password);\n      if (!isValid) {\n        throw new Error(\"Incorrect password\");\n      }\n\n      const token = jwt.sign(\n        { user: _.pick(user, [\"_id\", \"name\"]) },\n        SECRET,\n        { expiresIn: \"1y\" }\n      );\n      return token\n    },\n    signup: async (__, args, context) => {\n      const User = context.User;\n      const user = args;\n      const users = await User.find({});\n\n      const username = users.some(u => u.name === user.name);\n      const email = users.some(u => u.email === user.email);\n\n      if (username || email) {\n        return Number(username) + Number(email) * 2\n      }\n      \n      user.password = await bcrypt.hash(args.password, 12);\n      const savedUser = await User(user).save();\n      \n      const token = jwt.sign(\n        { user: _.pick(savedUser, [\"_id\", \"name\"]) },\n        context.SECRET,\n        { expiresIn: \"1y\" }\n      );\n\n      context.token = token;\n      return token;\n    },\n    createProject: async (__, args, { Project }) => {\n      const date = new Date();\n      const body = Object.assign({}, args, {\n        dateCreated: date,\n        dateVisited: date\n      });\n      const project = await Project(body).save();\n      return prepare(project);\n    },\n    deleteProject: async (__, { _id }, { Project }) => {\n      const result = await Project.deleteOne({ _id });\n      return result.n === 1;\n    },\n    deleteComponent: async (__, { _id, parentId }, { Component }) => {\n      const component = await Component.find({ _id: parentId });\n      const children = component[0].children.filter(id => id !== _id);\n      await Component.update(\n        { _id: parentId },\n        { children }\n      );\n      const result = await Component.deleteOne({ _id });\n      return result.n === 1;\n    },\n    deleteUnassignedComponent: async (__, { _id }, { Component }) => {\n      const result = await Component.deleteOne({ _id })\n      return result.n === 1;\n    },\n    createComponent: async (__, args, { Component }) => {\n      const component = await Component(args).save();\n      const { _id } = component;\n      await Component.update(\n        { _id },\n        { cloneId: _id, iteration: 0 }\n      );\n      const returnComponent = await Component.find({ _id });\n      return prepare(returnComponent[0]);\n    },\n    copyComponent: async (__, args, { Component }) => {\n      const component = await Component(args).save();\n      return prepare(component);\n    },\n    copyChildren: async (__, { childrenData }, { Component }) => {\n      const children = childrenData.map(async child => {\n        const data = await Component.find({ _id: child._id });\n        const component = {\n          iteration: child.iteration,\n          children: [],\n          name: data[0].name,\n          state: data[0].state, \n          props: data[0].props, \n          callbacks: data[0].callbacks, \n          projectId: data[0].projectId, \n          style: data[0].style, \n          placement: data[0].placement, \n          cloneId: data[0].cloneId, \n        }\n        const copy = await Component(component).save();\n        return prepare(copy)\n      })\n      return children\n    },\n    toggleComponentStyle: async (__, { _id }, { Component }) => {\n      let component = await Component.find({ _id });\n      const style = component[0].style === \"container\" ? \"presentational\" : \"container\";\n      component[0].style = style;\n      await Component.update({ _id: _id }, { style: style });\n      const newComponent = await Component.find({ _id });\n      return prepare(newComponent[0]);\n    },\n    addChild: async (__, { _id, childId }, { Component }) => {\n      const component = await Component.find({ _id });\n      const children = [...component[0].children, childId];\n      return await Component.update({ _id }, { children });\n    },\n    editComponentName: async (__, { _id, name }, { Component }) => {\n      await Component.update({ _id }, { name });\n      const newComponent = await Component.find({ _id });\n      return prepare(newComponent[0]);\n    },\n    addProp: async (__, { prop }, { Prop, Component }) => {\n      await Prop(prop).save();\n      const _id = prop.componentId;\n      const component = await Component.find({ _id });\n      return prepare(component[0]);\n    },\n    deleteProp: async (__, { _id }, { Prop }) => {\n      const result = await Prop.deleteOne({ _id });\n      return result.n === 1;\n    },\n    editProp: async (__, { _id, name, proptype }, { Prop }) => {\n      await Prop.findOneAndUpdate({ _id }, { name, proptype });\n      const prop = await Prop.find({ _id });\n      return prepare(prop[0]);\n    },\n    addState: async (__, { state }, { State, Component }) => {\n      await State(state).save();\n      const _id = state.componentId;\n      const component = await Component.find({ _id });\n      return prepare(component[0]);\n    },\n    deleteState: async (__, { _id }, { State }) => {\n      const result = await State.deleteOne({ _id });\n      return result.n === 1;\n    },\n    editState: async (__, { _id, name, statetype }, { State }) => {\n      await State.findOneAndUpdate({ _id }, { name, statetype });\n      const state = await State.find({ _id });\n      return prepare(state[0]);\n    },\n    addCallback: async (__, { callback }, { Callback }) => {\n      let result = await Callback(callback).save();\n      const cb = await Callback.find({ _id: result._id });\n      return prepare(cb[0]);\n    },\n    deleteCallback: async (__, { _id }, { Callback }) => {\n      let result = await Callback.deleteOne({ _id });\n      return result.n === 1;\n    },\n    editCallback: async (\n      __,\n      { _id, name, description, setState, functionArgs },\n      { Callback }\n    ) => {\n      const result = await Callback.findOneAndUpdate(\n        { _id },\n        {\n          name,\n          description,\n          setState,\n          functionArgs\n        }\n      );\n      const cb = await Callback.find({ _id: result._id });\n      return prepare(cb[0]);\n    },\n    unassignComponent: async (__, { _id, parentId }, { Component }) => {\n      const parentComp = await Component.find({ _id: parentId });\n      await Component.update({ _id }, { placement: \"unassigned\" });\n      const newChildren = parentComp[0].children.filter(id => id !== _id);\n      await Component.update(\n        { _id: parentId },\n        { children: newChildren }\n      );\n      const newParent = await Component.find({ _id: parentId});\n      const newChild = await Component.find({ _id });\n      return [prepare(newChild[0]), prepare(newParent[0])];\n    },\n    assignComponent: async (__, { _id, parentId }, { Component }) => {\n      const parentComp = await Component.find({\n        _id: parentId\n      });\n      await Component.update({ _id }, { placement: \"child\" });\n      const newChildren = [...parentComp[0].children, _id];\n      await Component.update({ _id: parentId }, { children: newChildren });\n      const newParent = await Component.find({\n        _id: parentId\n      });\n      const newChild = await Component.find({\n        _id\n      });\n      return [prepare(newChild[0]), prepare(newParent[0])];\n    }\n  }\n};\n"]}